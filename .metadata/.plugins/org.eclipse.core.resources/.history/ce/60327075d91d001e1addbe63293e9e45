package parcial.biblioteca;

import java.util.LinkedList;
import java.util.List;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Random;

public class Pedido {

	private final int codigo;
	private final Usuario usuario;
	private List<Ejemplar> ejemplares;
	private final LocalDate fechaRealizacion;
	private LocalDate fechaDevolucion;
	private static final double PRECIO_MULTA_POR_DIA = 500;
	private static final int CODIGO_PEDIDO_MAXIMO = 10000;

	private static int generarCodigo() {
		Random random = new Random();
		return random.nextInt(CODIGO_PEDIDO_MAXIMO) + 1;
	}

	public Pedido(Usuario usuario, LocalDate fechaDevolucion) throws FechaInvalidaException {
		if (LocalDate.now().isBefore(fechaDevolucion))
			throw new FechaInvalidaException("No es posible declarar una fecha anterior a la actual");
		this.codigo = generarCodigo();
		this.usuario = usuario;
		this.ejemplares = new LinkedList<>();
		this.fechaRealizacion = LocalDate.now();
		this.fechaDevolucion = fechaDevolucion;
	}

	public boolean agregarEjemplar(Ejemplar ejemplar) {
		if (ejemplar == null)
			throw new NullPointerException();

		if (!ejemplar.estaDisponible())
			return false;

		ejemplares.add(ejemplar);
		ejemplar.setEstaDisponible(false);
		return true;
	}

	public double obtenerMultaPorVencimiento() {
		long diasDeRetraso = ChronoUnit.DAYS.between(LocalDate.now(), fechaDevolucion);
		return diasDeRetraso > 0 ? diasDeRetraso * PRECIO_MULTA_POR_DIA : 0;
	}

	public boolean procesarPedidoConMulta(Pedido pedido) {
		double multa = pedido.obtenerMultaPorVencimiento();
		
		if(multa == 0) {
			return false;
		}
		
		if(pedido.getUsuario().getSaldo() < multa)
			return SaldoInsuficienteException("No es posible pagar la multa");
		
		return true;
	}

	public int getCodigo() {
		return codigo;
	}

	public Usuario getUsuario() {
		return usuario;
	}

	public List<Ejemplar> getEjemplares() {
		return ejemplares;
	}

	public LocalDate getFechaRealizacion() {
		return fechaRealizacion;
	}

	public LocalDate getFechaDevolucion() {
		return fechaDevolucion;
	}

}
